version: "3.3"
services:

  proxy:
    ports:
      - "80:80"
      - "8090:8080"
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Add a constraint to only use services with the label for this stack
      # from the env var TRAEFIK_TAG
      - --providers.docker.constraints=Label(`traefik.constraint-label-stack`, `${TRAEFIK_TAG?Variable not set}`)
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Disable Docker Swarm mode for local development
      # - --providers.docker.swarmmode
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-traefik-public-http.rule=Host(`${DOMAIN?Variable not set}`)
      - traefik.http.services.${STACK_NAME?Variable not set}-traefik-public.loadbalancer.server.port=80

  pgadmin:
    ports:
      - "5050:5050"

  backend_api_gateway:
    ports:
      - "8000:8000"
    volumes:
      - ./backend_api_gateway/app:/app
    environment:
      - JUPYTER=jupyter lab --ip=0.0.0.0 --allow-root --NotebookApp.custom_display_url=http://127.0.0.1:8888
      - SERVER_HOST=http://${DOMAIN?Variable not set}
    build:
      context: ./backend_api_gateway
      dockerfile: backend.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
        INSTALL_JUPYTER: ${INSTALL_JUPYTER-true}
    # command: bash -c "while true; do sleep 1; done"  # Infinite loop to keep container live doing nothing
    command: /start-reload.sh
    labels:
      - traefik.enable=true
      - traefik.constraint-label-stack=${TRAEFIK_TAG?Variable not set}
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend_api_gateway-http.rule=PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)
      - traefik.http.services.${STACK_NAME?Variable not set}-backend_api_gateway.loadbalancer.server.port=8000

  backend_metrics:
    volumes:
      - ./metrics:/code/metrics
    ports:
      - "5000:5000"



  workspace_service:
    env_file:
      - ./workspace-service/.env
    environment:
      - SERVER_HOST=http://${DOMAIN?Variable not set}
    ports: 
      - "8001:8001"
    # volumes:
    #   - node_modules:/app/node_modules
    #   - ./workspace-service/src:/app/src
    build: 
      context: ./workspace-service
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}


volumes:
  app-db-data:
  node_modules:

networks:
  traefik-public:
    # For local dev, don't expect an external Traefik network
    external: false


